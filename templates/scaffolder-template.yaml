apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-microservice-template
  title: Node.js Microservice Template
  description: Create a new Node.js microservice with TypeScript, Express, and best practices
  tags:
    - recommended
    - nodejs
    - typescript
    - microservice
spec:
  owner: platform-team
  type: service

  parameters:
    - title: Provide basic information
      required:
        - component_id
        - owner
        - description
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the microservice
          pattern: '^[a-z0-9-]+$'
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A brief description of what this microservice does
        owner:
          title: Owner
          type: string
          description: Team responsible for this microservice
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind:
                - Group

    - title: Choose repository settings
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - myorg

    - title: Configure service options
      properties:
        port:
          title: Service Port
          type: number
          description: Port number for the service
          default: 3000
        hasDatabase:
          title: Include Database
          type: boolean
          description: Add PostgreSQL database support
          default: true
        hasRedis:
          title: Include Redis
          type: boolean
          description: Add Redis cache support
          default: false
        includeTests:
          title: Include Test Setup
          type: boolean
          description: Include Jest testing framework
          default: true

  steps:
    - id: fetch-base
      name: Fetch Base Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          port: ${{ parameters.port }}
          hasDatabase: ${{ parameters.hasDatabase }}
          hasRedis: ${{ parameters.hasRedis }}
          includeTests: ${{ parameters.includeTests }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: private
        defaultBranch: main
        protectDefaultBranch: true

    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    - id: create-pagerduty
      name: Create PagerDuty Integration
      action: pagerduty:service:create
      input:
        name: ${{ parameters.component_id }}
        description: ${{ parameters.description }}
        escalationPolicyId: P123456

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: View Pipeline
        url: ${{ steps.publish.output.remoteUrl }}/actions
        icon: github
