# CI Pipeline for Eulen Platform
# This workflow validates the catalog files and project structure

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-catalog:
    name: Validate Backstage Catalog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PyYAML
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Validate catalog files
        run: |
          echo "Validating catalog YAML files..."
          for file in catalog/*.yaml catalog-info.yaml; do
            if [ -f "$file" ]; then
              echo "Checking $file"
              python -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
            fi
          done

  validate-python-tools:
    name: Validate Python Tools
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.modified, 'tools/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f tools/requirements.txt ]; then
            pip install -r tools/requirements.txt
          fi

      - name: Lint Python files
        run: |
          pip install flake8
          if [ -d tools ]; then
            flake8 tools/ --count --select=E9,F63,F7,F82 --show-source --statistics
          fi

  validate-scaffolder-templates:
    name: Validate Scaffolder Templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate template YAML files
        run: |
          echo "Validating scaffolder template files..."
          for file in scaffolder-templates/*.yaml; do
            if [ -f "$file" ]; then
              echo "Checking $file"
              python -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
            fi
          done

  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python for MkDocs
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install MkDocs
        run: |
          pip install mkdocs-techdocs-core

      - name: Build documentation
        run: |
          mkdocs build --strict

      - name: Check for broken links
        run: |
          echo "Documentation built successfully"
